pipeline {
    agent any
    environment {
        DOCKER_REGISTRY = '74.248.138.247:5000'
        APP_NAME = 'socialmedia-backend'
        DOCKER_CREDENTIALS = credentials('docker-credentials-id')
        DEPLOY_SERVER = '74.248.138.247'
	REPO_DIRECTORY = 'socialmedia-application'
    }
    
    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }
        
        stage('Build Production Image') {
            steps {
                script {
                    docker.build("${DOCKER_REGISTRY}/${APP_NAME}:${BUILD_NUMBER}", "-f Dockerfile .")
                    docker.build("${DOCKER_REGISTRY}/${APP_NAME}:latest", "-f Dockerfile .")
                }
            }
        }
        stage('Deploy') {
            steps {
                sshagent(credentials: ['jenkins-ssh-key']) {
                    sh """
                        ssh azureuser@${DEPLOY_SERVER} "cd ${REPO_DIRECTORY} && \
                        docker compose pull && \
                        docker compose down --remove-orphans && \
                        docker compose up -d"
                    """
                }
            }
        }

        stage('Health Check') {
            steps {
                script {
                    sleep 30
                    
                    sshagent(credentials: ['jenkins-ssh-key']) {
                        sh """
                            ssh azureuser@${DEPLOY_SERVER} '
                            for i in \$(seq 1 5); do
                                if curl -s http://localhost:3000/api/health; then
                                    echo "Application is healthy"
                                    exit 0
                                fi
                                echo "Attempt \$i failed, waiting..."
                                sleep 10
                            done
                            echo "Health check failed after 5 attempts"
                            exit 1
                            '
                        """
                    }
                }
            }
        }
    }
}
